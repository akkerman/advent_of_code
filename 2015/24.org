:PROPERTIES:
:ID:       4bbbb44e-38c6-4dfa-b2a0-84a098ca8b2c
:END:
#+title: 2015 Day 24: It Hangs in the Balance
#+filetags: 2015:advent

- tags :: [[id:3b4d4e31-7340-4c89-a44d-df55e5d0a3d3][aoc]]

* part one

Deze begon met het genereren van de permutaties en dan daar groepjes van maken en kijken of eea klopt. Dit werkte wel voor het voorbeeld maar liep super lang voor de werkelijke input en heb ik afgebroken.

Een paar waarnemingen.

1. de gewichten van de groepen hoeven niet te worden vergeleken, we weten van te
   voren hoe zwaar ze meoten zijn. nl het totaal gedeeld door drie.
2. lengte is belangrijker dan quantum entaglement. Dus als we groepjes maken en
   ervoor zorgen dat we eerst de kleinste groepjes maken dan vinden we sneller
   een match. Als we daarbij groepjes die kleiner zijn dan de eerste groep
   negeren dan moet er, op een gegeven moment, een match komen met de kortste
   lengte en beste qa op de eerste positie.
3. de volgorde van de gewichten (permutaties) maakt niets uit voor het antwoord
   en dus nemen we combinaties.

Uiteindelijk leek eea nogsteeds niet te stoppen, met een print zag ik dat er voornamelijk dezelfde groep voorbij kwam. Toen ik die probeerde was dat het antwoord! Dus de eerste die ik vind geef ik terug en dat wassum.

Dit komt waarschijnlijk omdat de groepjes van kortste lengte eerst worden gegenereerd. dus de eerste de beste combinatie die alle groepjes weet te berekeninen is de korste met de laagste qa.

* part two

dezelfde loop in een loop in een loop maar dan 4x
