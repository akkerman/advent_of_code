:PROPERTIES:
:ID:       6b9831de-37d4-480e-b3af-c6ed2b872775
:END:
#+title: 2019 Day 20: Donut Maze
#+filetags: :python:
- tags :: [[id:e28a8549-79c6-4060-83a2-a6bcbe0bb09f][aoc2019]] Â· [[id:40ac912d-4bcf-4a77-8445-b8c3c7f9413d][input parsing]]

* Part One

Die twee letterige portals maken het parsen wel lastiger zeg.
Als ik die eerst zou vervangen door 1 lettertje dan is het veel makkelijker.

Ik zie echter in de input dat er een vertikale AA is en een horizontale AS.

Wat ik WEL kan doen is

- parse alle paden (~.~) naar een coord stelsel.
- zet alle letters in een dict
- zoek obv de letters en de positie ervan tov paden wat het coord is van de portal
- construeer een dict van ene portal coord naar andere
- maak een aangepast neigbors functie die niet alleen in de paden moet zetten maar ook naar ander portal punt kan gaan.

- evt gelijk een graph maken? Aantal stappen van ene portal punt naar andere (zal wellicht in part twee nodig zijn?)

Let op dat we alleen puntjes hoeven te tellen. als je door een portal gaat, ga
je gelijk van het puntje voor het label naar het puntje na het andere label.
Je moet het zo zien alsof die paden direct aan elkaar vervonden zijn (deel twee
kost het tijd om te portallen?)



* Part Two

Ik begrijp niet helemaal hoe ik dat 'kleiner' moet interpreteren, moet ik de
stapjes gaan schalen of is het gewoon een aanduiding dat het een nivo dieper
binnen die donut zit?

De input is overigens wel echt vierkant, dat zien we eigenlijk nooit omdat de characters meestal hoger dan breed zijn.

#+CAPTION: square donut maze
#+NAME:    fig:donut-maze
[[./20.org_scrot-20250107071621.png]]


Volgens mij maakt het niet uit. Je komt gewoon en level dieper.

Hoe, als het path door een portal gaat, te bepalen of het dieper of minder diep wordt?
bepaal min en max row en col en als een portal 1 van die heeft dan is het een buitenste.

#+begin_src python
def is_outer(r, c) -> bool:
    return r in (min_row, max_row) or c in (min_col, max_col)
#+end_src

Oh en btw, een portal op level 0 is geen portal en een exit op een dieper level is geen exit.

Appart. Het 'interesting' heeft minder stappen bij mij.


Ha! ik weet waarom ik bij part 1 een of bij one error had.
Ik ben bij het bepalen van portals een stap aan het zetten EN door de portal aan het gaan.
Ik moet gewoon kijken of het huidige punt connect naar een portal niet eerst een stap nemen.

En nu uitvogelen waarom de oplossing
1. het verkeerde antwoord geeft bij het interesting voorbeeld.
2. lang duurt

Ok ik heb van alle nodes naar alle andere nodes de afstand bepaald.
Hiermee krijg ik met part 1, volgens mij, dezelfde getallen (even nog testcases aanpassen)
Het interesting voorbeeld is nu zo klaar maar geeft een te laag antwoord, en ook het antwoord voor echte input is te laag.


Enkele debug sessies verder.
Note to self: niet het level updaten in een loop, maar een hulp variable gebruiken en die updaten.

Heb uiteindelijk ook het genomen pad + de levels bij gehouden zodat ik de
stappen kan printen zoals het voorbeeld en kan zien waar het mis gaat.
