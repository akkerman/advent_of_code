:PROPERTIES:
:ID:       51c719ea-61f1-4677-a4dd-06f9b3af889c
:END:
#+title: 2019 Day 10: Monitoring Station
#+filetags: :python:
- tags :: [[id:3b4d4e31-7340-4c89-a44d-df55e5d0a3d3][aoc]]

* Part One

Als de eerste asteroïde gevonden is dan is alles er achter *in dezelfde richting* niet te zien.
Ik dacht eerst het zelfde veelvoud van afstand maar dat is duidelijk te zien
niet het geval bij ~F~, deze zit op ~(2,4)~ en ~(3,6)~ is b.v. alweer onzicht baar.
Dit is dus steeds op een afstand van ~(1,2)~

Wat is de algemene manier om de kleinste vector te maken?
Het lijkt op vereenvoudigen van breuken...

Het blijkt een eenheids vector te heten. De echte eenheidsvector is overigens
NIET met gehele getallen, wat zou er gebeuren als ik dat voor nu even negeer en
alle punten markeer met hun eenheidsvector en dat dan dus neem als unieke waarde?

Dit gaat goed voor kleine grids maar voor mijn antwoord is het te hoog. En ook
voor het laatste voorbeeld is het te hoog. Het juiste punt wordt wel
teruggegeven.

Omdat ik ~floats~ gebruik is de preciezie wellicht te hoog??
Yep als ik preciezie 3 neem dan klopt het!

* Part Two

Als ik lijstjes maak per eenheidsvector en dan uitvogel hoe ik elke
eenheidsvector in een rondje moet benaderen dan haal ik elke keer de eerste van
die lijst eraf.

Sorteren zou dan moeten obv de hoek van die vector tov huidig punt.
Recht boven huidig punt zou dan 90° zijn geloof ik.

Ik zal eerst part one eens implementeren met hoeken!
Dat werkt. Mooie is dat er geen issue is met precisie.
