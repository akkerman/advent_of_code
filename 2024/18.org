:PROPERTIES:
:ID:       901d075e-677b-417a-a4f8-b738adf8881e
:END:
#+title: 2024 Day 18: RAM Run
#+filetags: :python:
- tags :: [[id:3b4d4e31-7340-4c89-a44d-df55e5d0a3d3][aoc]]

* Part One

Kortste pad berekenen na 1024 van die memory blocks te hebben laten vallen.


* Part Two

Brute force, alle simulaties totdat er geen pad meer is.

Zat nog te denken aan een bisect methode maar dit duurde enkele seconden.


Toch nog bisectie ge√Ømplementeerd het is ook wel bekend als [[id:049155c8-c942-422a-8ca7-88e6b339515e][binary search]].

Gaat van 3.5 seconden terug naar ~20ms

't duurt overigens 5 milliseconden als ik daarvoor eerst de bruteforce van 3.5 seconden heb gedraait.
Wellicht dat pypy dan iets sneller heeft gedaan ofzo?

Grappig dat, als ik die binary search meerdere keren uitvoer dat het de eerste
keer ~20ms duurt, dan 10 en daarna steeds dichter bij 5ms.

Nog een leuke bevinding is dat het voor dit algorithme niet echt uitmaakt of je
begint bij 2024, waarvan we in part1 al weten dat het pad niet geblokkeerd is,
of dat je bij 0 begint.
