:PROPERTIES:
:ID:       49b84d28-1f7e-48d9-a8d5-38de335cd3c7
:END:
#+title: 2024 Day 3: Mull It Over
#+filetags: :python:
- tags :: [[id:212a04da-2f2f-42a8-aac3-6cc62a805688][aoc2024]] Â· [[id:40ac912d-4bcf-4a77-8445-b8c3c7f9413d][input parsing]]

* Part One

extract with regex


#+begin_src python :results verbatim :wrap src python :exports both
import re

memory = 'xmul(2,4)%&mul[3,7]!@^do_not_mul(5,5)+mul(32,64]then(mul(11,8)mul(8,5))'
pattern = r'mul\((\d+),(\d+)\)'

return re.findall(pattern, memory)
#+end_src

#+RESULTS:
#+begin_src python
[('2', '4'), ('5', '5'), ('11', '8'), ('8', '5')]
#+end_src

* Part Two

Split by "do()" then at least the start should be considered on.

Split each part by "don't()" if there are multiple then only the first part is
on the others are all off.

#+begin_src python :results verbatim :wrap src python :exports both
import re

memory = "xmul(2,4)&mul[3,7]!^don't()_mul(5,5)+mul(32,64](mul(11,8)undo()?mul(8,5))"
pattern = r'mul\((\d+),(\d+)\)'

sub_matches = [do.split("don't()")[0] for do in memory.split('do()')]

return [m for sub in sub_matches for m in re.findall(pattern, sub)]
#+end_src

#+RESULTS:
#+begin_src python
[('2', '4'), ('8', '5')]
#+end_src
