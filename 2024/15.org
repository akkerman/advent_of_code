:PROPERTIES:
:ID:       9e6b240b-3863-4b80-87af-cb2306f2217f
:END:
#+title: 2024 Day 15: Warehouse Woes
#+filetags: :python:
- tags :: [[id:212a04da-2f2f-42a8-aac3-6cc62a805688][aoc2024]] · [[id:d74b47b0-cd57-43c0-ae15-61e09c0d1955][Grid puzzle]] · [[id:0039e229-d52a-44bb-b027-b9fa80dd8935][simulation]] · [[id:28998a92-8554-4fb0-9bfa-ee6265ff6258][Scaling problem]]
- references :: [[id:342634fc-0bf5-480c-9998-b30261d019d2][2021 Day 6: Lanternfish]]

* Part One

Als je een box wilt verplaatsen en deze bots tegen een andere box dan moet je die eerst verplaatsen.
Dit is een hele rij van boxes. als je 1 daarvan niet kan verplaatsen blijft de robot staan.
Als je die wel kan verplaatsen begin je bij de gene die het verst weg van de robot is. En blijf je (recursief) de boxes verplaatsen totdat er plek vrij is voor de robot.

* Part Two

Dus col van het coord verdubbelen en dan col+1 ook toevoegen.


Daar waar ik er bij deel één nog mee weg kwam de dozen te verplaatsen zodra ik zag dat het kon, zorgt dat nu voor situaties waar ik de werkelijkheid al heb veranderd, de controle niet meer klopt en de robot de doos door een andere heen drukt:

#+begin_src
##############
##......##..##
##.....[]...##
##...[[]....##
##.....@....##
##..........##
##############
#+end_src

Idee is nu om eerst recursief te bepalen WELKE coordinaten verplaatst moeten worden en dan als alle controles zeggen dat het kan dit in allemaal achter te doen.

't is een hele lap code geworden
Later eens kijken of andere dit slimmer kunnen. (korter *en* leesbaar)
